server:
  undertow:
    accesslog:
      dir: log # Undertow 日志存放目录
      enabled: false # 是否启动日志
      pattern: common # 日志格式
      prefix: access_log # 日志文件名前缀
      suffix: log # 日志文件名后缀
      # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
      # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 1024
    buffers-per-region: 1024 # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
    direct-buffers: true # 是否分配的直接内存
    io-threads: 16 #该值不要设置过大，如果过大，启动项目会报错：打开文件数过多
    max-http-post-size: 0 # HTTP POST请求最大的大小
    worker-threads: 128 # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
  servlet:
    context-path: '/api'
    encoding:
      force: true
      charset: utf-8
      enabled: true

